---
groups:
- name: bosh-alicloud-cpi
  jobs:
  - build-candidate
  - integration
  - bats
  - end-2-end
#  - promote-candidate

shared:
- &prepare-director
  task: prepare-director
  file: pipelines/shared/tasks/prepare-director.yml
  params: &prepare-director-params
    INFRASTRUCTURE:     alicloud
    DIRECTOR_VARS_FILE: {{alicloud_director_vars_file}}

- &deploy-director
  task: deploy-director
  file: pipelines/shared/tasks/deploy-director.yml

- &run-bats
  task: run-bats
  file: pipelines/shared/tasks/run-bats.yml
  params:
    INFRASTRUCTURE:     alicloud
    STEMCELL_NAME:      bosh-alicloud-kvm-ubuntu-jammy-go_agent
    BAT_INFRASTRUCTURE: alicloud
    BAT_NETWORKING:     manual
    BAT_RSPEC_FLAGS:    "--tag ~multiple_manual_networks --tag ~raw_ephemeral_storage --tag ~persistent_disk"

- &run-end-2-end
  task: run-e2e
  file: bosh-cpi-src/ci/tasks/run-e2e.yml
  params:
    ALICLOUD_ACCESS_KEY_ID:              {{alicloud_access_key__primary}}
    ALICLOUD_SECRET_ACCESS_KEY:          {{alicloud_secret_key__primary}}

- &put-environment
  task: put-environment
  file: bosh-cpi-src/ci/tasks/put-environment.yml
  params: &put-environment-params
    access_key: {{alicloud_access_key__primary}}
    secret_key: {{alicloud_secret_key__primary}}
    region:     {{alicloud_region__primary}}
    terraform_role_arn: {{terraform_role_arn}}
    remote_state_access_key: {{terraform_backend_access_key}}
    remote_state_secret_key: {{terraform_backend_secret_key}}
    remote_state_bucket:     {{terraform_backend_bucket}}
    remote_state_region:     {{terraform_backend_region}}
    remote_state_file_path:  "bosh-alicloud-cpi-state"
    public_key: ((PUBLIC_KEY))

- &ensure-terminated
  task: ensure-terminated
  file: bosh-cpi-src/ci/tasks/ensure-terminated.yml
  params:
    ALICLOUD_ACCESS_KEY_ID:     {{alicloud_access_key__primary}}
    ALICLOUD_ACCESS_KEY_SECRET: {{alicloud_secret_key__primary}}
    ALICLOUD_DEFAULT_REGION:    {{alicloud_region__primary}}

- &teardown
  task: teardown
  file: pipelines/shared/tasks/teardown.yml

jobs:
- name: build-candidate
  serial: true
  plan:
  - in_parallel:
    - get: bosh-cpi-src
      trigger: true
      resource: bosh-cpi-src-in
    - get: version-semver
      trigger: false
      params:
        bump: patch
    - get: bosh-cli
      trigger: false
  - put: version-semver
    params: {file: version-semver/number}
  - task: build
    file: bosh-cpi-src/ci/tasks/build-candidate.yml
  - put: bosh-cpi-dev-artifacts
    params: {file: candidate/*.tgz}

- name: integration
  serial: true
  plan:
  - in_parallel:
    - get: bosh-cpi-release
      trigger: true
      resource: bosh-cpi-dev-artifacts
      passed: [build-candidate]
    - get: bosh-cpi-src
      trigger: false
      resource: bosh-cpi-src-in
      passed: [build-candidate]
    - get: stemcell
      trigger: false
      resource: ubuntu-jammy-stemcell
    - get: aliyun-cli
      trigger: false
      resource: aliyun-cli
    - get: jq-blob
      trigger: false
    - get: one-day
      trigger: false
  - <<: *put-environment
    params:
      <<: *put-environment-params
      env_name: bosh-alicloud-cpi-integration-dev
      delete_on_failure: true
      terraform_source: bosh-cpi-src/ci/assets/terraform
  - task: test
    file: bosh-cpi-src/ci/tasks/run-integration.yml
    params:
      ALICLOUD_ACCESS_KEY_ID:     {{alicloud_access_key__primary}}
      ALICLOUD_ACCESS_KEY_SECRET: {{alicloud_secret_key__primary}}
    ensure:
      do:
        - <<: *ensure-terminated
        - <<: *put-environment
          params:
            <<: *put-environment-params
            env_name: bosh-alicloud-cpi-integration-dev
            action: destroy
            terraform_source: bosh-cpi-src/ci/assets/terraform

- name: bats
  serial: true
  plan:
  - in_parallel:
    - get: cpi-release
      trigger: true
      resource: bosh-cpi-dev-artifacts
      passed: [build-candidate]
    - get: bosh-release
      trigger: false
      resource: bosh-release
    - get: bosh-cpi-src
      trigger: false
      resource: bosh-cpi-src-in
      passed: [build-candidate]
    - get: stemcell
      trigger: false
      resource: ubuntu-jammy-light-stemcell
    - get: bosh-deployment
      trigger: false
    - get: pipelines
      trigger: false
    - get: bosh-cli
      trigger: false
    - get: bats
      trigger: false
    - get: one-day
      trigger: false
    - get: jq-blob
      trigger: false
    - get: aliyun-cli
      trigger: false
      resource: aliyun-cli
  - <<: *put-environment
    params:
      <<: *put-environment-params
      env_name: bosh-alicloud-cpi-bats-dev
      delete_on_failure: true
      terraform_source: bosh-cpi-src/ci/assets/terraform
  - do:
    - <<: *prepare-director
      params:
        <<: *prepare-director-params
        OPTIONAL_OPS_FILE:  |
          -o pipelines/shared/assets/ops/remove-hm.yml
          -o bosh-deployment/external-ip-with-registry-not-recommended.yml
          -o pipelines/shared/assets/ops/remove-provider-cert.yml
    - do:
        - <<: *deploy-director
        - <<: *run-bats
      ensure:
        do:
          - <<: *teardown
          - <<: *ensure-terminated
    ensure:
      do:
        - <<: *put-environment
          params:
            <<: *put-environment-params
            env_name: bosh-alicloud-cpi-bats-dev
            action: destroy
            terraform_source: bosh-cpi-src/ci/assets/terraform

- name: end-2-end
  serial: true
  plan:
  - in_parallel:
    - {get: cpi-release,     trigger: true,  resource: bosh-cpi-dev-artifacts,   passed: [build-candidate]}
    - {get: bosh-release,    trigger: false, resource: bosh-release}
    - {get: bosh-cpi-src,    trigger: false, resource: bosh-cpi-src-in,          passed: [build-candidate]}
    - {get: stemcell,        trigger: false, resource: ubuntu-jammy-light-stemcell}
    - {get: heavy-stemcell,  trigger: false, resource: ubuntu-jammy-stemcell}
    - {get: bosh-deployment, trigger: false}
    - {get: pipelines,       trigger: false}
    - {get: bosh-cli,        trigger: false}
    - {get: one-day,             trigger: false}
    - {get: jq-blob,         trigger: false}
    - {get: aliyun-cli,      trigger: false, resource: aliyun-cli}
  - <<: *put-environment
    params:
      <<: *put-environment-params
      env_name: bosh-alicloud-cpi-end-2-end-dev
      delete_on_failure: true
      terraform_source: bosh-cpi-src/ci/assets/terraform
  - do:
    - <<: *prepare-director
      params:
        <<: *prepare-director-params
        OPTIONAL_OPS_FILE:  |
          -o bosh-deployment/external-ip-with-registry-not-recommended.yml
          -o pipelines/shared/assets/ops/remove-provider-cert.yml
#              -o pipelines/alicloud/assets/ops/ram-instance-profile-ops-file.yml
    - do:
        - <<: *deploy-director
        - <<: *run-end-2-end
      ensure:
        do:
          - <<: *teardown
          - <<: *ensure-terminated
    ensure:
      do:
        - <<: *put-environment
          params:
            <<: *put-environment-params
            env_name: bosh-alicloud-cpi-end-2-end-dev
            action: destroy
            terraform_source: bosh-cpi-src/ci/assets/terraform

# Develop pipeline does not contain publish release
#- name: promote-candidate
#  plan:
#  - aggregate:
#    - {get: bosh-cpi-release,       trigger: false, resource: bosh-cpi-dev-artifacts, passed: [end-2-end, bats, integration]}
#    - {get: bosh-cpi-src,           trigger: false, resource: bosh-cpi-src-in,        passed: [end-2-end, bats, integration]}
#    - {get: release-version-semver, trigger: false, params: {bump: major}}
#    - {get: bosh-cli,               trigger: false}
#  - task: promote
#    file: bosh-cpi-src/ci/tasks/promote-candidate.yml
#    params:
#      ALICLOUD_ACCESS_KEY_ID:     {{alicloud_access_key__primary}}
#      ALICLOUD_ACCESS_KEY_SECRET: {{alicloud_secret_key__primary}}
#  - put: bosh-cpi-src-out
#    params: {repository: promoted/repo, rebase: true, tag_prefix: "v", tag: promoted/integer_version}
#  - put: release-version-semver
#    params: {file: release-version-semver/number}


resource_types:
  - name: terraform_type
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
      tag: latest

resources:
  - name: one-day
    type: time
    source: {interval: 24h}
  - name: bosh-cpi-dev-artifacts
    type: s3
    source:
      regexp: bosh-alicloud-cpi-(\d+\.\d+\.\d+)\.tgz
      bucket:            {{bosh_cpi_release_bucket}}
      region:            {{bosh_cpi_release_region}}
      access_key_id:     {{bosh_cpi_release_access_key}}
      secret_access_key: {{bosh_cpi_release_secret_key}}
      endpoint:          oss-((bosh_cpi_release_region)).aliyuncs.com
  - name: bosh-cpi-src-in
    type: git
    source:
      uri: https://github.com/((bosh-cpi-src-owner))/bosh-alicloud-cpi-release.git
      branch: ((bosh-cpi-src-branch))
      ignore_paths:
        - .final_builds/**/*.yml
        - releases/**/*.yml
        - CHANGELOG.md
  - name: version-semver
    type: semver
    source:
      key:               current-version
      bucket:            {{bosh_cpi_release_bucket}}
      region:            {{bosh_cpi_release_region}}
      access_key_id:     {{bosh_cpi_release_access_key}}
      secret_access_key: {{bosh_cpi_release_secret_key}}
      endpoint:          oss-((bosh_cpi_release_region)).aliyuncs.com
#  - name: release-version-semver
#    type: semver
#    source:
#      key:               release-current-version
#      bucket:            {{bosh_cpi_release_bucket}}
#      region:            {{bosh_cpi_release_region}}
#      access_key_id:     {{bosh_cpi_release_access_key}}
#      secret_access_key: {{bosh_cpi_release_secret_key}}
#      endpoint:          oss-((bosh_cpi_release_region)).aliyuncs.com
  - name: bosh-cli
    type: s3
    source:
      regexp: bosh-cli-([0-9.]+)-linux-amd64
      cloudfront_url: https://dulfnruy35dwq.cloudfront.net
      bucket: bosh-cli-artifacts
      region_name: us-east-1
  - name: pipelines
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/bosh-cpi-certification
      branch: master
  - name: bosh-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/bosh
  - name: ubuntu-jammy-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-alicloud-kvm-ubuntu-jammy-go_agent
      force_regular: true
      tarball: true
  - name: ubuntu-jammy-light-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-alicloud-kvm-ubuntu-jammy-go_agent
  - name: bats
    type: git
    source:
      uri: https://github.com/aliyun/bosh-acceptance-tests
      branch: alicloud

  # begin: repos for e2e bosh blobs
  - name: jq-blob
    type: git
    source:
      uri: https://github.com/archieves/jq-blob

  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment
      branch: master

#  - name: aliyun-cli
#    type: github-release
#    source:
#      owner: aliyun
#      repository: aliyun-cli
#      insecure: true
  - name: aliyun-cli
    type: s3
    source:
      access_key_id: {{aliyun_cli_access_key}}
      secret_access_key: {{aliyun_cli_secret_key}}
      bucket: {{aliyun_cli_bucket}}
      regexp: .*-cli-linux-3\.0\.(\d+)-amd64\.tgz
      region_name: {{aliyun_cli_region}}
      endpoint: oss-((aliyun_cli_region)).aliyuncs.com